pipeline {
    agent any 

    stages {
        stage('Clone Repo') {
            steps {
                checkout scm

                sh 'ls -la'
                sh 'env'
            }
        }

        stage('Identify Changes') {
            steps {
                sh 'env'

                script {
                    def cmd = "git diff --name-only origin/master $GIT_COMMIT | tr '\n\r' ','" //| sed 's/\\(.*\\),.*/\\1/'
                    sh 'git diff --name-only $GIT_COMMIT'
                    def changes = sh(script: cmd, returnStdout: true)
                    echo changes
                    echo 'aiushdiaushd'
                    infraHasChanged(changes.tokenize(','))
                }
            }
        }
    }
}

def infraHasChanged(changes) {
    echo "123123123"
    changes.each { change ->
        echo change
    }
}
